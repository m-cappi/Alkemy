-- MySQL Script generated by MySQL Workbench
-- Thu Sep  2 15:39:13 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Alkemy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Alkemy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Alkemy` DEFAULT CHARACTER SET utf8 ;
USE `Alkemy` ;

-- -----------------------------------------------------
-- Table `Alkemy`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Alkemy`.`categories` (
  `id_category` INT NOT NULL AUTO_INCREMENT,
  `categ_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_category`),
  UNIQUE INDEX `categ_nombre_UNIQUE` (`categ_name` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Alkemy`.`transaction_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Alkemy`.`transaction_types` (
  `id_types` INT NOT NULL AUTO_INCREMENT,
  `name_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_types`),
  UNIQUE INDEX `name_UNIQUE` (`name_type` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Alkemy`.`transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Alkemy`.`transactions` (
  `id_transaction` INT NOT NULL AUTO_INCREMENT,
  `creation_date` DATE NOT NULL DEFAULT current_timestamp(),
  `concept` VARCHAR(45) NOT NULL,
  `amount` INT NOT NULL,
  `modification_date` DATETIME NULL ON UPDATE CURRENT_TIMESTAMP,
  `fk_type` INT NOT NULL,
  `fk_category` INT NOT NULL,
  PRIMARY KEY (`id_transaction`),
  INDEX `fk_categoria_idx` (`fk_category` ASC) ,
  INDEX `fk_type_idx` (`fk_type` ASC) ,
  CONSTRAINT `fk_category`
    FOREIGN KEY (`fk_category`)
    REFERENCES `Alkemy`.`categories` (`id_category`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_type`
    FOREIGN KEY (`fk_type`)
    REFERENCES `Alkemy`.`transaction_types` (`id_types`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `Alkemy` ;

-- -----------------------------------------------------
-- Placeholder table for view `Alkemy`.`view_transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Alkemy`.`view_transactions` (`'Date'` INT, `Concept` INT, `Amount` INT, `Category` INT, `'Type'` INT);

-- -----------------------------------------------------
-- View `Alkemy`.`view_transactions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Alkemy`.`view_transactions`;
USE `Alkemy`;
CREATE  OR REPLACE VIEW `view_transactions` AS
SELECT a.id_transaction AS ID, a.creation_date as 'Date', a.concept as Concept, a.amount as Amount, b.id_category, b.categ_name as Category, c.name_type as 'Type' FROM transactions a
LEFT JOIN categories b
ON a.fk_category = b.id_category
LEFT JOIN transaction_types c
ON a.fk_type = c.id_types
ORDER BY a.creation_date DESC;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


INSERT INTO `transaction_types` (`id_types`, `name_type`) VALUES
(2, 'Expense'),
(1, 'Income');

INSERT INTO `categories` (`id_category`, `categ_name`) VALUES
(2, 'Automobile'),
(1, 'Food'),
(4, 'Pets'),
(3, 'Pharmacy'),
(5, 'Salary'),
(6, 'Vacations');

INSERT INTO `transactions` (`creation_date`, `concept`, `amount`, `fk_type`, `fk_category`) VALUES
('2021-06-28', 'Income1', 777, 1, 4),
('2021-07-01','Income2', 888, 1, 1),
('2021-07-02','Income3', 999, 1, 2),
('2021-07-04','Income5', 555, 1, 4),
('2021-07-05','Income6', 444, 1, 5),
('2021-07-06','Income7', 333, 1, 6),
('2021-07-03','Income4', 666, 1, 3),
('2021-06-28', 'Income8', 777, 1, 4),
('2021-07-15','Income9', 888, 1, 1),
('2021-07-16','Income10', 999, 1, 2),
('2021-07-17','Income11', 555, 1, 4),
('2021-08-05','Income12', 444, 1, 5),
('2021-09-06','Income13', 333, 1, 6),
('2021-05-03','Income14', 666, 1, 3),
('2021-06-28', 'Expense1', 337, 2, 4),
('2021-07-01','Expense2', 888, 2, 1),
('2021-07-02','Expense3', 119, 2, 2),
('2021-07-04','Expense5', 555, 2, 4),
('2021-07-05','Expense6', 214, 2, 5),
('2021-07-06','Expense7', 333, 2, 6),
('2021-07-03','Expense4', 666, 2, 3),
('2021-06-28', 'Expense8', 337, 2, 4),
('2021-07-15','Expense9', 888, 2, 1),
('2021-07-16','Expense10', 119, 2, 2),
('2021-07-17','Expense11', 555, 2, 4),
('2021-08-05','Expense12', 214, 2, 5),
('2021-09-06','Expense13', 333, 2, 6),
('2021-05-03','Expense14', 666, 2, 3);
